package jorn.hiel.mapper.service;

import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.Map;

@Service
@Slf4j
public class ConfigFileCreator {

    @Autowired
    TranslationFileReader translationFileReader;

    @Autowired
    ConfigFileReader configFileReader;

    @Autowired
    VehicleSpecReader vehicleSpecReader;


    private String file;




    public void runMe() {
        //log.info("Configuration files not found, creating");
        log.info("Checkinf for configuration file");
        file=configFileReader.getFile();
        createFile();
        createConfigFile();

    }


    private void createFile() {

        try {
            log.info("-creating files -");
            log.info(file);

            Files.createDirectories(Path.of(file).getParent());

            Path location = Path.of(file);
            if (!Files.exists(location)) {
                Files.createFile(location);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }


    }

    /**
     * Initialize the configuration file with values when no configuration file is found
     */
    private void createConfigFile() {

        ObjectMapper objectMapper = new ObjectMapper();
        Map<String, String> configuration = new HashMap<>();

        configuration.put("UnknownEntry","replaceMe");
        configuration.put("modDescVersion","64");
        configuration.put("multiplayer","true");
        configuration.put("iconFilename","icon.dds");
        configuration.put("enTitle","true");
        configuration.put("deTitle","true");
        configuration.put("nlTitle","true");
        configuration.put("vehicleFileName","vehicle.xml");
        configuration.put("version","1.0.0.0");
        configuration.put("vehicleType","tractor");
        configuration.put("annotation","Generated by xml Skeletor");
        configuration.put("baseMaterialName","baseMaterial");
        configuration.put("numberOfFillUnits","0");
        configuration.put("numberOfConsumers","0");
        configuration.put("numberOfMirrors","0");
        configuration.put("numberOfTorq","6");
        configuration.put("numberOfDifferentials","1");
        configuration.put("numberOfExhaust","1");
        configuration.put("numberOfWorkAreas","1");
        configuration.put("numberOfSprayerEffects","1");
        configuration.put("numberOfSprayerAnimationNodes","1");
        configuration.put("numberOfWheelConfigurations","1");
        configuration.put("numberOfWheels","4");
        configuration.put("numberOfSharedLights","1");
        configuration.put("numberOfLightsStates","3");
        configuration.put("numberOfLowLights","1");
        configuration.put("numberOfHighLights","1");
        configuration.put("numberOfBrakeLights","1");
        configuration.put("numberOfTurnLightLeft","1");
        configuration.put("numberOfTurnLightRight","1");

        configuration.put("numberOfReverseLight","1");
        configuration.put("numberOfInteriorLight","1");
        configuration.put("numberOfBeaconLight","1");
        configuration.put("numberOfTrailerConfigurations","1");
        configuration.put("numberOfDischargeNodes","1");
        configuration.put("numberOfHubs","1");
        configuration.put("numberOfDynamicallyLoadedParts","1");
        configuration.put("numberOfInputAttacherJoints","1");
        configuration.put("numberOfOutputAttacherJoints","1");
        configuration.put("numberOfAttacherJoints","1");
        configuration.put("numberOfConnectionHoses","1");
        configuration.put("numberOfBalePlaces","1");
        configuration.put("numberOfCoverConfigurations","1");
        configuration.put("numberOfSuspensions","1");
        configuration.put("numberOfLicensePlates","1");


        configuration.put("maxItemCount","100");
        configuration.put("needsLowering","true");
        configuration.put("allowTurnBackward","true");

        configuration.put("ANIMATIONNAMES","DEFINE OWN ANIMATION DEFAULTS");
        configuration.put("enterAnimation","EnterAnimation");
        configuration.put("foldableAnimation","foldableAnimation");
        configuration.put("WoodHarvesterCutAnimation","cutAnimation");
        configuration.put("WoodHarvesterGrabAnimation","grabberAnimation");
        configuration.put("TipAnimation","tipAnimationBack");
        configuration.put("CharacterNodeFileName","$dataS2/character/player/player.xml");
        configuration.put("defaultHydraulic","DEFAULT_HYDRAULIC_SOUND");
        configuration.put("motorStartDuration","2400");
        configuration.put("EXHAUST","CONFIGURATION OF THE EXHAUST PARTICLESYSTEM");
        configuration.put("exhaustFile","$data/particleSystems/shared/exhaust.i3d");
        configuration.put("exhaustMinRpmColor","0.9 0.9 0.9 0.1");
        configuration.put("exhaustMaxRpmColor","0.9 0.9 0.9 0.4");
        configuration.put("exhaustMinRpmScale","0.05");
        configuration.put("exhaustMaxRpmScale","0.5");
        configuration.put("exhaustXzRotationsOffset","90 0");
        configuration.put("exhaustXzRotationsForward","-45 0");
        configuration.put("exhaustXzRotationsBackward","90 0");
        configuration.put("exhaustXzRotationsLeft","0 -100");
        configuration.put("exhaustXzRotationsRight","0 100");
        configuration.put("BASEMATERIAL SECTION","CONFIGURTATION OF BASEMATERIAL");
        configuration.put("colorMat2","JCB_YELLOW1");
        configuration.put("BaseMaterialConfigMatColor","JCB_YELLOW1");
        configuration.put("designMaterialConfiguration","true");
        configuration.put("baseMaterialConfiguration","true");
        configuration.put("DIFFERENTIAL SECTION","CONFIGURTATION OF DIFFERENTIAL");
        configuration.put("DiffTorqueRatio","0.5");
        configuration.put("maxSpeedRatio","1.5");
        configuration.put("WHEEL SECTION","CONFIGURTATION OF THE WHEELS");
        configuration.put("wheelConfigurationDefaultName","$l10n_configuration_valueDefault");
        configuration.put("connectionHoseDiameter","0.02");
        configuration.put("connectionHoseStraightening","2");
        configuration.put("baleParticleFile","$data/particleSystems/shared/threshingStrawParticles.i3d");

        try {
            objectMapper.writeValue(new File(configFileReader.getFile()), configuration);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }




}
